name: Email CLA Contributor Blog Post

on:
  workflow_dispatch:
    inputs:
      login:
        description: 'GitHub login of contributor'
        required: true
      prNumber:
        description: 'Pull request number'
        required: true

permissions:
  contents: read

jobs:
  email-wordpress-post:
    runs-on: ubuntu-latest

    steps:
      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y sendmail jq curl

      - name: Send CLA blog post if not already sent
        env:
          EMAIL_TO: ${{ secrets.WP_POST_BY_EMAIL }}
          GIST_ID: ${{ secrets.GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
        run: |
          set -e
          LOGIN="${{ github.event.inputs.login }}"
          REPO="${{ github.repository }}"
          GIST_API="https://api.github.com/gists/$GIST_ID"

          echo "Checking if @$LOGIN already exists in Gist..."

          # Step 1: Fetch Gist and validate response
          curl -s -H "Authorization: token $GIST_TOKEN" "$GIST_API" -o gist.json
          if ! jq -e '.files' gist.json > /dev/null; then
            echo "❌ Failed to fetch Gist or Gist has no files."
            cat gist.json
            exit 1
          fi

          FILE_NAME=$(jq -r '.files | keys[0]' gist.json)
          echo "✅ Gist file: $FILE_NAME"

          RAW_CONTENT=$(jq -r ".files[\"$FILE_NAME\"].content" gist.json)

          # Step 2: Parse JSON array from string
          echo "Parsing Gist content..."
          if ! CONTENT=$(echo "$RAW_CONTENT" | jq '.' 2>/dev/null); then
            echo "❌ Gist content is not valid JSON. Showing raw content:"
            echo "$RAW_CONTENT"
            exit 1
          fi

          # Step 3: Check if contributor already exists
          if echo "$CONTENT" | jq -e ".[] | select(. == \"$LOGIN\")" > /dev/null; then
            echo "🔁 Skipping... @$LOGIN already posted."
            exit 0
          fi

          # Step 4: Send email
          SUBJECT="New CLA Contributor: @$LOGIN"
          BODY="[status draft]\n\n@$LOGIN signed the CLA and contributed to \`$REPO\`.\nGitHub: https://github.com/$LOGIN"

          echo "📧 Sending email to: $EMAIL_TO"
          echo -e "Subject: $SUBJECT\n\n$BODY" | sendmail "$EMAIL_TO"
          echo "✅ Email sent for @$LOGIN"

          # Step 5: Update Gist with new contributor
          UPDATED_JSON=$(echo "$CONTENT" | jq ". + [\"$LOGIN\"]")
          UPDATE_PAYLOAD=$(jq -n --arg fn "$FILE_NAME" --argjson c "$UPDATED_JSON" \
            '{files: {($fn): {content: ($c | tostring)}}}')

          echo "📝 Updating Gist..."
          curl -s -X PATCH -H "Authorization: token $GIST_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$UPDATE_PAYLOAD" "$GIST_API" > /dev/null

          echo "✅ Gist updated with @$LOGIN"
